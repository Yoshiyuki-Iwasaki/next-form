import Head from "next/head";
import Image from "next/image";
import styles from "../../styles/Home.module.css";
import { useForm } from "react-hook-form";
import fetch from "node-fetch";
import ReCAPTCHA from "react-google-recaptcha";
import { useRef } from "react";

export default function form() {
  const {
    register,
    handleSubmit,
    formState: { errors },
    watch,
  } = useForm();
  const reRef = useRef();

  const onSubmit = async (formData) => {
    const token = await reRef.current.executeAsync();
    const response = await fetch("api/contact", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        firstName: formData.firstName,
        lastName: formData.lastName,
        Email: formData.Email,
        mobileNumber: formData.mobileNumber,
        Title: formData.Title,
        Developer: formData.Developer,
        token,
      }),
    });

    try {
      if (response.data.status == 200) {
        console.log("success");
      }
    } catch (err) {
      console.log(err);
    }
    location.href = "/form/thanks";
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <form onSubmit={handleSubmit(onSubmit)}>
          <input
            type="text"
            placeholder="First name"
            {...register("firstName", { required: true, maxLength: 80 })}
          />
          <input
            type="text"
            placeholder="Last name"
            {...register("lastName", { required: true, maxLength: 100 })}
          />
          <input
            type="text"
            placeholder="Email"
            {...register("Email", { required: true, pattern: /^\S+@\S+$/i })}
          />
          <input
            type="tel"
            placeholder="Mobile number"
            {...register("mobileNumber", {
              required: true,
              minLength: 6,
              maxLength: 12,
            })}
          />
          <select {...register("Title", { required: true })}>
            <option value="Mr">Mr</option>
            <option value="Mrs">Mrs</option>
            <option value="Miss">Miss</option>
            <option value="Dr">Dr</option>
          </select>

          <input
            {...register("Developer", { required: true })}
            type="radio"
            value="Yes"
          />
          <input
            {...register("Developer", { required: true })}
            type="radio"
            value="No"
          />
          <input type="submit" />
        </form>
      </main>

      <ReCAPTCHA
        sitekey="6LfeXzsbAAAAAMdJLThhcvSXUtfgUrjAA4nOETIf"
        size="invisible"
        ref={reRef}
      />

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
